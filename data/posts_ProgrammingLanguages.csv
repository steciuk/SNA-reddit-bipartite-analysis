title,score,id,url,num_comments,created,author,upvote_ratio,permalink,subreddit,subreddit_subscribers,depth
"Concept Art: what might python look like in Japanese, without any English characters?",495,g9iu8x,https://i.redd.it/ulc23n21jiv41.png,65,1588059607.0,MartialArtTetherball,0.96,/r/ProgrammingLanguages/comments/g9iu8x/concept_art_what_might_python_look_like_in/,ProgrammingLanguages,85265,2
"I made a ""programming language"" based on COBOL syntax",349,awr3th,https://www.reddit.com/r/ProgrammingLanguages/comments/awr3th/i_made_a_programming_language_based_on_cobol/,102,1551592022.0,lartu,0.99,/r/ProgrammingLanguages/comments/awr3th/i_made_a_programming_language_based_on_cobol/,ProgrammingLanguages,85265,2
I've developed a new programming language,294,gnmq6k,https://xkcd.com/2309/,48,1590021386.0,oilshell,0.98,/r/ProgrammingLanguages/comments/gnmq6k/ive_developed_a_new_programming_language/,ProgrammingLanguages,85265,2
I analyzed Wikipedia documents of Programming Languages to visualize a paradigm relationship between them: and this is the result,294,fvx72d,https://i.redd.it/1xje41trn6r41.png,47,1586172944.0,dev_kr,0.98,/r/ProgrammingLanguages/comments/fvx72d/i_analyzed_wikipedia_documents_of_programming/,ProgrammingLanguages,85265,2
Been thinking about writing a custom layer over HTML (left compiles into right). What are your thoughts on this syntax?,291,ioon55,https://i.redd.it/xlky02gqbvl51.png,108,1599546593.0,MartialArtTetherball,0.97,/r/ProgrammingLanguages/comments/ioon55/been_thinking_about_writing_a_custom_layer_over/,ProgrammingLanguages,85265,2
Beyond Opinionated: Announcing The First Actually Bigoted Language,220,u2lrbo,https://www.reddit.com/r/ProgrammingLanguages/comments/u2lrbo/beyond_opinionated_announcing_the_first_actually/,51,1649839296.0,Inconstant_Moo,0.9,/r/ProgrammingLanguages/comments/u2lrbo/beyond_opinionated_announcing_the_first_actually/,ProgrammingLanguages,85265,2
10 Most(ly dead) Influential Programming Languages • Hillel Wayne,201,fp7sko,https://www.hillelwayne.com/post/influential-dead-languages/,77,1585210393.0,bjzaba,0.97,/r/ProgrammingLanguages/comments/fp7sko/10_mostly_dead_influential_programming_languages/,ProgrammingLanguages,85265,2
"""Folders"" is a programming language where programs are encoded as hierarchies of folders in the Windows operating system.",203,gr1sk0,http://danieltemkin.com/Esolangs/Folders/,19,1590515194.0,homoiconic,0.97,/r/ProgrammingLanguages/comments/gr1sk0/folders_is_a_programming_language_where_programs/,ProgrammingLanguages,85265,2
Made a simple assembler for my CPU emulator,192,pf715g,https://v.redd.it/wm1fb32xepk71,3,1630420296.0,dibs45,0.98,/r/ProgrammingLanguages/comments/pf715g/made_a_simple_assembler_for_my_cpu_emulator/,ProgrammingLanguages,85265,2
pLam - for anyone exploring λ-calculus,188,a0yyfc,https://i.redd.it/kyx49egwsx021.gif,12,1543352260.0,Sandro_Lovnicki,1.0,/r/ProgrammingLanguages/comments/a0yyfc/plam_for_anyone_exploring_λcalculus/,ProgrammingLanguages,85265,2
Flow - a little language I've been working on,181,xw189u,https://v.redd.it/k33nt9z26xr91,49,1664946143.0,dibs45,0.97,/r/ProgrammingLanguages/comments/xw189u/flow_a_little_language_ive_been_working_on/,ProgrammingLanguages,85265,2
[Hobby Project] I wrote a lexer generator that takes in token definitions (pictured) based on patterns and outputs a lexer. This makes it so much easier to create new languages or modify an existing language's syntax.,174,lpqoxl,https://i.redd.it/bbih83yzj1j61.png,20,1614007390.0,dibs45,0.97,/r/ProgrammingLanguages/comments/lpqoxl/hobby_project_i_wrote_a_lexer_generator_that/,ProgrammingLanguages,85265,2
Guido van Rossum joins Microsoft,175,jsyfnm,https://twitter.com/gvanrossum/status/1326932991566700549,18,1605200816.0,azhenley,0.96,/r/ProgrammingLanguages/comments/jsyfnm/guido_van_rossum_joins_microsoft/,ProgrammingLanguages,85265,2
Glide - data transformation language (documentation in comments),174,ybjtax,https://v.redd.it/6jukxr1nkkv91,50,1666537057.0,dibs45,0.97,/r/ProgrammingLanguages/comments/ybjtax/glide_data_transformation_language_documentation/,ProgrammingLanguages,85265,2
CS 6120: Advanced Compilers: The Self-Guided Online Course,168,kb4szf,https://www.cs.cornell.edu/courses/cs6120/2020fa/self-guided/,2,1607700340.0,mttd,0.99,/r/ProgrammingLanguages/comments/kb4szf/cs_6120_advanced_compilers_the_selfguided_online/,ProgrammingLanguages,85265,2
What Operators Do You WISH Programming Languages Had? [Discussion],166,ya87l1,https://www.reddit.com/r/ProgrammingLanguages/comments/ya87l1/what_operators_do_you_wish_programming_languages/,245,1666395422.0,Uploft,0.96,/r/ProgrammingLanguages/comments/ya87l1/what_operators_do_you_wish_programming_languages/,ProgrammingLanguages,85265,2
LLVM Tutorial,155,kjuh0b,https://mukulrathi.co.uk/create-your-own-programming-language/llvm-ir-cpp-api-tutorial/,13,1608877511.0,hou32hou,0.98,/r/ProgrammingLanguages/comments/kjuh0b/llvm_tutorial/,ProgrammingLanguages,85265,2
Worst Design Decisions You've Ever Seen,155,uhtxqi,https://www.reddit.com/r/ProgrammingLanguages/comments/uhtxqi/worst_design_decisions_youve_ever_seen/,314,1651623336.0,Uploft,0.99,/r/ProgrammingLanguages/comments/uhtxqi/worst_design_decisions_youve_ever_seen/,ProgrammingLanguages,85265,2
Comparing algebraic data types: Rust and Datatype99,153,nc1o18,https://i.redd.it/vroveo6y01z61.png,9,1620972176.0,Hirrolot,0.98,/r/ProgrammingLanguages/comments/nc1o18/comparing_algebraic_data_types_rust_and_datatype99/,ProgrammingLanguages,85265,2
I'm impressed with Raku,152,hnk0wy,https://www.reddit.com/r/ProgrammingLanguages/comments/hnk0wy/im_impressed_with_raku/,35,1594225185.0,faiface,0.98,/r/ProgrammingLanguages/comments/hnk0wy/im_impressed_with_raku/,ProgrammingLanguages,85265,2
An Accessible Introduction to Type Theory and Implementing a Type Checker,152,ss3w6n,https://mukulrathi.com/create-your-own-programming-language/intro-to-type-checking/,18,1644820032.0,oilshell,0.98,/r/ProgrammingLanguages/comments/ss3w6n/an_accessible_introduction_to_type_theory_and/,ProgrammingLanguages,85265,2
Lessons learned over the years.,148,kro7li,https://www.reddit.com/r/ProgrammingLanguages/comments/kro7li/lessons_learned_over_the_years/,77,1609940998.0,PL_Design,0.98,/r/ProgrammingLanguages/comments/kro7li/lessons_learned_over_the_years/,ProgrammingLanguages,85265,2
Vale,154,hplj2i,https://www.reddit.com/r/ProgrammingLanguages/comments/hplj2i/vale/,33,1594515454.0,verdagon,1.0,/r/ProgrammingLanguages/comments/hplj2i/vale/,ProgrammingLanguages,85265,2
My new type system caught a bug in my own standard library that would have ruined someone's day at runtime,148,zhk74l,https://www.reddit.com/r/ProgrammingLanguages/comments/zhk74l/my_new_type_system_caught_a_bug_in_my_own/,15,1670650845.0,dibs45,0.97,/r/ProgrammingLanguages/comments/zhk74l/my_new_type_system_caught_a_bug_in_my_own/,ProgrammingLanguages,85265,2
Parser generators vs. handwritten parsers: surveying major language implementations in 2021,145,p8vvcs,https://notes.eatonphil.com/parser-generators-vs-handwritten-parsers-survey-2021.html,38,1629567995.0,azhenley,1.0,/r/ProgrammingLanguages/comments/p8vvcs/parser_generators_vs_handwritten_parsers/,ProgrammingLanguages,85265,2
if … then … else had to be invented,143,kc9fy9,https://github.com/ericfischer/if-then-else/blob/master/if-then-else.md,41,1607860751.0,bjzaba,0.97,/r/ProgrammingLanguages/comments/kc9fy9/if_then_else_had_to_be_invented/,ProgrammingLanguages,85265,2
Learn Assembly by Writing Entirely Too Many Brainfuck Compilers in Rust,144,jsf9cr,https://github.com/pretzelhammer/rust-blog/blob/master/posts/too-many-brainfuck-compilers.md,2,1605124174.0,bjzaba,0.98,/r/ProgrammingLanguages/comments/jsf9cr/learn_assembly_by_writing_entirely_too_many/,ProgrammingLanguages,85265,2
Lambda Calculus in 400 Bytes,134,t3d7kx,https://justine.lol/lambda/,10,1646046661.0,bjzaba,0.99,/r/ProgrammingLanguages/comments/t3d7kx/lambda_calculus_in_400_bytes/,ProgrammingLanguages,85265,2
"How JIT Compilers are Implemented and Fast: Julia, Pypy, LuaJIT, Graal and More",133,hlut4h,https://carolchen.me/blog/jits-impls/,7,1593985242.0,mttd,0.99,/r/ProgrammingLanguages/comments/hlut4h/how_jit_compilers_are_implemented_and_fast_julia/,ProgrammingLanguages,85265,2
Garbage Collection · Crafting Interpreters,135,e41idc,http://craftinginterpreters.com/garbage-collection.html,27,1575140523.0,mttd,0.99,/r/ProgrammingLanguages/comments/e41idc/garbage_collection_crafting_interpreters/,ProgrammingLanguages,85265,2
Carbon's most exciting feature is its calling convention,128,wb6x1e,https://www.foonathan.net/2022/07/carbon-calling-convention/,52,1659106552.0,foonathan,0.97,/r/ProgrammingLanguages/comments/wb6x1e/carbons_most_exciting_feature_is_its_calling/,ProgrammingLanguages,85265,2
Implement a non-trivial hashing algorithm in your language.,129,m5sfzb,https://www.reddit.com/r/ProgrammingLanguages/comments/m5sfzb/implement_a_nontrivial_hashing_algorithm_in_your/,13,1615835778.0,PL_Design,1.0,/r/ProgrammingLanguages/comments/m5sfzb/implement_a_nontrivial_hashing_algorithm_in_your/,ProgrammingLanguages,85265,2
Zig-style generics are not well-suited for most languages,128,xzfdix,https://typesanitizer.com/blog/zig-generics.html,51,1665300212.0,typesanitizer,0.95,/r/ProgrammingLanguages/comments/xzfdix/zigstyle_generics_are_not_wellsuited_for_most/,ProgrammingLanguages,85265,2
Flix | The Flix Programming Language,124,occing,https://flix.dev/,16,1625239888.0,useerup,0.99,/r/ProgrammingLanguages/comments/occing/flix_the_flix_programming_language/,ProgrammingLanguages,85265,2
How to implement dependent types in 80 lines of code,124,11bo39o,https://gist.github.com/Hirrolot/27e6b02a051df333811a23b97c375196,30,1677340155.0,Hirrolot,0.96,/r/ProgrammingLanguages/comments/11bo39o/how_to_implement_dependent_types_in_80_lines_of/,ProgrammingLanguages,85265,2
Comparing Golang and Interface99,125,tglrw8,https://u.cubeupload.com/Hirrolot/golanginterface99.png,5,1647555098.0,Hirrolot,0.94,/r/ProgrammingLanguages/comments/tglrw8/comparing_golang_and_interface99/,ProgrammingLanguages,85265,2
"A Tale of Yak Shaving: Accidentally Making a Language, for an Engine, for a Game",122,twcrj9,https://verdagon.dev/blog/yak-shave-language-engine-game,12,1649105628.0,verdagon,0.97,/r/ProgrammingLanguages/comments/twcrj9/a_tale_of_yak_shaving_accidentally_making_a/,ProgrammingLanguages,85265,2
Zig: Statement Regarding the Zen Programming Language,123,itazke,https://ziglang.org/news/statement-regarding-zen-programming-language.html,45,1600183619.0,azhenley,0.99,/r/ProgrammingLanguages/comments/itazke/zig_statement_regarding_the_zen_programming/,ProgrammingLanguages,85265,2
"[humour/satire] Just came across the ""OK?"" language, thought people here might appreciate it .""OK?s mission is to do away with the needless complexity of today's programming languages and let you focus on what matters"".",119,y7ufsb,https://github.com/jesseduffield/OK,16,1666159057.0,flexibeast,0.98,/r/ProgrammingLanguages/comments/y7ufsb/humoursatire_just_came_across_the_ok_language/,ProgrammingLanguages,85265,2
LAMBDA: The ultimate Excel worksheet function,120,l5g4gd,https://www.microsoft.com/en-us/research/blog/lambda-the-ultimatae-excel-worksheet-function/,37,1611674553.0,mttd,0.99,/r/ProgrammingLanguages/comments/l5g4gd/lambda_the_ultimate_excel_worksheet_function/,ProgrammingLanguages,85265,2
Assembly interpreter inside of TypeScript's type system,119,yww51r,https://judehunter.dev/blog/assembly-interpreter-in-typescripts-type-system,15,1668611843.0,mattsowa,0.97,/r/ProgrammingLanguages/comments/yww51r/assembly_interpreter_inside_of_typescripts_type/,ProgrammingLanguages,85265,2
Journal of Functional Programming moving to Open Access,119,qttgej,https://www.cambridge.org/core/blog/2021/11/11/journal-of-functional-programming-moving-to-open-access/,4,1636907499.0,mttd,0.98,/r/ProgrammingLanguages/comments/qttgej/journal_of_functional_programming_moving_to_open/,ProgrammingLanguages,85265,2
Keli: A programming language to make Functional Programming a joy for users,117,ijzssv,http://keli-language.gitbook.io/doc/,70,1598886838.0,azhenley,0.92,/r/ProgrammingLanguages/comments/ijzssv/keli_a_programming_language_to_make_functional/,ProgrammingLanguages,85265,2
Carbon has well documented design rationales,114,w3juhj,https://www.reddit.com/r/ProgrammingLanguages/comments/w3juhj/carbon_has_well_documented_design_rationales/,69,1658316063.0,foonathan,0.9,/r/ProgrammingLanguages/comments/w3juhj/carbon_has_well_documented_design_rationales/,ProgrammingLanguages,85265,2
"From Turbo Pascal to Delphi to C# to TypeScript, an interview with PL legend Anders Hejlsberg",117,y1ryzt,https://www.youtube.com/watch?v=6udlQakSXZY,8,1665542616.0,typesanitizer,0.98,/r/ProgrammingLanguages/comments/y1ryzt/from_turbo_pascal_to_delphi_to_c_to_typescript_an/,ProgrammingLanguages,85265,2
LDPL 3.0.0 and why you should work on silly things,114,bcmhkn,https://www.reddit.com/r/ProgrammingLanguages/comments/bcmhkn/ldpl_300_and_why_you_should_work_on_silly_things/,10,1555126355.0,lartu,0.99,/r/ProgrammingLanguages/comments/bcmhkn/ldpl_300_and_why_you_should_work_on_silly_things/,ProgrammingLanguages,85265,2
Thoughts on infectious systems: async/await and pure,117,vofiyv,https://www.reddit.com/r/ProgrammingLanguages/comments/vofiyv/thoughts_on_infectious_systems_asyncawait_and_pure/,71,1656614327.0,verdagon,0.93,/r/ProgrammingLanguages/comments/vofiyv/thoughts_on_infectious_systems_asyncawait_and_pure/,ProgrammingLanguages,85265,2
Compiling to Assembly from Scratch: book released!,115,j1wsvh,https://keleshev.com/cas,24,1601375991.0,halst,0.99,/r/ProgrammingLanguages/comments/j1wsvh/compiling_to_assembly_from_scratch_book_released/,ProgrammingLanguages,85265,2
"Remembering John Conway's FRACTRAN, a ridiculous, yet surprisingly deep language",114,ghpek3,http://raganwald.com/2020/05/03/fractran.html,18,1589210023.0,homoiconic,0.99,/r/ProgrammingLanguages/comments/ghpek3/remembering_john_conways_fractran_a_ridiculous/,ProgrammingLanguages,85265,2
Why Lexing and Parsing Should Be Separate,116,gdt3xd,https://github.com/oilshell/oil/wiki/Why-Lexing-and-Parsing-Should-Be-Separate,66,1588663139.0,oilshell,0.98,/r/ProgrammingLanguages/comments/gdt3xd/why_lexing_and_parsing_should_be_separate/,ProgrammingLanguages,85265,2
What's your opinion on exceptions?,109,o1ye66,https://www.reddit.com/r/ProgrammingLanguages/comments/o1ye66/whats_your_opinion_on_exceptions/,103,1623939612.0,hellix08,0.97,/r/ProgrammingLanguages/comments/o1ye66/whats_your_opinion_on_exceptions/,ProgrammingLanguages,85265,2
Penrose: From Mathematical Notation to Beautiful Diagrams,110,gv8dz4,http://penrose.ink/siggraph20,5,1591108377.0,bjzaba,0.98,/r/ProgrammingLanguages/comments/gv8dz4/penrose_from_mathematical_notation_to_beautiful/,ProgrammingLanguages,85265,2
“Don’t listen to language designers”,113,11hil82,https://www.reddit.com/r/ProgrammingLanguages/comments/11hil82/dont_listen_to_language_designers/,142,1677885972.0,Nuoji,0.84,/r/ProgrammingLanguages/comments/11hil82/dont_listen_to_language_designers/,ProgrammingLanguages,85265,2
"If Lua is faster and smaller than Python, while being just as powerful and capable, then why is Python so much more popular?",110,tfurkb,https://www.reddit.com/r/ProgrammingLanguages/comments/tfurkb/if_lua_is_faster_and_smaller_than_python_while/,133,1647469171.0,GabiNaali,0.97,/r/ProgrammingLanguages/comments/tfurkb/if_lua_is_faster_and_smaller_than_python_while/,ProgrammingLanguages,85265,2
Why are you building a programming language?,110,pi84fo,https://www.reddit.com/r/ProgrammingLanguages/comments/pi84fo/why_are_you_building_a_programming_language/,93,1630824401.0,dibs45,0.98,/r/ProgrammingLanguages/comments/pi84fo/why_are_you_building_a_programming_language/,ProgrammingLanguages,85265,2
Design decisions I do not regret,110,kv7efq,https://futhark-lang.org/blog/2021-01-11-no-regrets.html,77,1610386233.0,Athas,1.0,/r/ProgrammingLanguages/comments/kv7efq/design_decisions_i_do_not_regret/,ProgrammingLanguages,85265,2
Someone wrote a blog post about my language!,107,knwg4r,https://esoteric.codes/blog/oak,25,1609443230.0,adamthekiwi99,0.97,/r/ProgrammingLanguages/comments/knwg4r/someone_wrote_a_blog_post_about_my_language/,ProgrammingLanguages,85265,2
Creator of SerenityOS announces new Jakt programming language,108,utqr52,https://awesomekling.github.io/Memory-safety-for-SerenityOS/,78,1653040788.0,tjpalmer,0.93,/r/ProgrammingLanguages/comments/utqr52/creator_of_serenityos_announces_new_jakt/,ProgrammingLanguages,85265,2
Type Theory Forall: Bringing Programming Languages Research outside of the academia,112,kjhz7u,https://typetheoryforall.com/,6,1608826570.0,mttd,0.98,/r/ProgrammingLanguages/comments/kjhz7u/type_theory_forall_bringing_programming_languages/,ProgrammingLanguages,85265,2
ChatGPT helped me design a brand new programming language,108,zeg48j,https://judehunter.dev/blog/chatgpt-helped-me-design-a-brand-new-programming-language,31,1670356208.0,mattsowa,0.89,/r/ProgrammingLanguages/comments/zeg48j/chatgpt_helped_me_design_a_brand_new_programming/,ProgrammingLanguages,85265,2
An Introduction to Session Types,109,lgtqo5,https://wen.works/posts/2020-12-17-an-introduction-to-session-types.html,7,1612964125.0,mttd,0.98,/r/ProgrammingLanguages/comments/lgtqo5/an_introduction_to_session_types/,ProgrammingLanguages,85265,2
Copper Language,108,kmlxfy,https://tibleiz.net/copper/index.html,16,1609272821.0,oilshell,1.0,/r/ProgrammingLanguages/comments/kmlxfy/copper_language/,ProgrammingLanguages,85265,2
"It's the programming environment, not the programming language",111,iix2ao,https://thesephist.com/posts/programming-environment/,51,1598724249.0,cutculus,0.95,/r/ProgrammingLanguages/comments/iix2ao/its_the_programming_environment_not_the/,ProgrammingLanguages,85265,2
Proving Algebraic Datatypes are “Algebraic”,105,hpvcvp,https://soap.coffee/~lthms/posts/AlgebraicDatatypes.html,0,1594564580.0,bjzaba,1.0,/r/ProgrammingLanguages/comments/hpvcvp/proving_algebraic_datatypes_are_algebraic/,ProgrammingLanguages,85265,2
"Does anyone else question the ""language as tool"" analogy?",106,zg9gnh,https://www.reddit.com/r/ProgrammingLanguages/comments/zg9gnh/does_anyone_else_question_the_language_as_tool/,56,1670529107.0,sintrastes,0.93,/r/ProgrammingLanguages/comments/zg9gnh/does_anyone_else_question_the_language_as_tool/,ProgrammingLanguages,85265,2
"What language features do you ""Consider Harmful"" and why?",108,ytywy7,https://www.reddit.com/r/ProgrammingLanguages/comments/ytywy7/what_language_features_do_you_consider_harmful/,312,1668338644.0,Inconstant_Moo,0.97,/r/ProgrammingLanguages/comments/ytywy7/what_language_features_do_you_consider_harmful/,ProgrammingLanguages,85265,2
Tomorrow Corporation tech demo: language/compiler/debugger/runtime/editor as an integrated whole,107,11abzxi,https://twitter.com/yiningkarlli/status/1628612150041382912,17,1677194404.0,mttd,0.97,/r/ProgrammingLanguages/comments/11abzxi/tomorrow_corporation_tech_demo/,ProgrammingLanguages,85265,2
Koi: A friendly companion for your shell scripting journeys,105,mjt5aj,https://www.reddit.com/r/ProgrammingLanguages/comments/mjt5aj/koi_a_friendly_companion_for_your_shell_scripting/,39,1617529228.0,hellix08,0.97,/r/ProgrammingLanguages/comments/mjt5aj/koi_a_friendly_companion_for_your_shell_scripting/,ProgrammingLanguages,85265,2
Hindley-Milner Type Inference Tutorial,105,k6c79n,https://course.ccs.neu.edu/cs4410sp19/lec_type-inference_notes.html,4,1607050096.0,hou32hou,0.99,/r/ProgrammingLanguages/comments/k6c79n/hindleymilner_type_inference_tutorial/,ProgrammingLanguages,85265,2
Interview with Zig language creator Andrew Kelley,101,ih0wd0,https://youtu.be/ZvskDoP09Ao,3,1598455673.0,tjpalmer,0.99,/r/ProgrammingLanguages/comments/ih0wd0/interview_with_zig_language_creator_andrew_kelley/,ProgrammingLanguages,85265,2
Syntax Design,105,yn0ux1,https://cs.lmu.edu/~ray/notes/syntaxdesign/,38,1667670193.0,jcubic,0.96,/r/ProgrammingLanguages/comments/yn0ux1/syntax_design/,ProgrammingLanguages,85265,2
Favorite PL paper?,106,x6hqky,https://www.reddit.com/r/ProgrammingLanguages/comments/x6hqky/favorite_pl_paper/,51,1662388598.0,e_hatti,1.0,/r/ProgrammingLanguages/comments/x6hqky/favorite_pl_paper/,ProgrammingLanguages,85265,2
LLVM in 100 Seconds,102,uwliza,https://www.youtube.com/watch?v=BT2Cv-Tjq7Q,18,1653378604.0,jcubic,0.93,/r/ProgrammingLanguages/comments/uwliza/llvm_in_100_seconds/,ProgrammingLanguages,85265,2
"Are you interested in designing and building programing languages? We're trying to build a community about that on stack exchange. However, we need more follows and questions to make that happen.",99,yykkef,https://area51.stackexchange.com/proposals/127456/programming-language-design/127489#127489,41,1668779463.0,Ghost_Of_Memes_Past,0.9,/r/ProgrammingLanguages/comments/yykkef/are_you_interested_in_designing_and_building/,ProgrammingLanguages,85265,2
2021 in Programming Languages,104,s1e4op,https://www.youtube.com/watch?v=sqNnN2Z4Lg4,10,1641911277.0,bjzaba,0.96,/r/ProgrammingLanguages/comments/s1e4op/2021_in_programming_languages/,ProgrammingLanguages,85265,2
Programming Language Checklist,101,q72xzn,https://www.mcmillen.dev/language_checklist.html,19,1634097227.0,RepresentativeNo6029,0.97,/r/ProgrammingLanguages/comments/q72xzn/programming_language_checklist/,ProgrammingLanguages,85265,2
Metalang99: A functional language for C99 preprocessor metaprogramming,102,lswnya,https://github.com/Hirrolot/metalang99,30,1614342185.0,Hirrolot,0.99,/r/ProgrammingLanguages/comments/lswnya/metalang99_a_functional_language_for_c99/,ProgrammingLanguages,85265,2
Closures · Crafting Interpreters,101,da1ro9,http://craftinginterpreters.com/closures.html,1,1569596988.0,mttd,1.0,/r/ProgrammingLanguages/comments/da1ro9/closures_crafting_interpreters/,ProgrammingLanguages,85265,2
Why are product types so common while sum types are so rare?,97,minw5w,https://www.reddit.com/r/ProgrammingLanguages/comments/minw5w/why_are_product_types_so_common_while_sum_types/,115,1617381062.0,jesseschalken,0.96,/r/ProgrammingLanguages/comments/minw5w/why_are_product_types_so_common_while_sum_types/,ProgrammingLanguages,85265,2
"Refinement Types: A Tutorial. ""[W]e show how to implement a refinement type checker via a progression of languages that incrementally add features to the language or type system."" [abstract + link to PDF, 119pp]",102,jc4gwe,https://arxiv.org/abs/2010.07763,6,1602828084.0,flexibeast,1.0,/r/ProgrammingLanguages/comments/jc4gwe/refinement_types_a_tutorial_we_show_how_to/,ProgrammingLanguages,85265,2
I made (again) web interactive programming language relations network visualization,97,kwknq3,https://v.redd.it/ls3dl3cir4b61,3,1610557361.0,dev_kr,0.98,/r/ProgrammingLanguages/comments/kwknq3/i_made_again_web_interactive_programming_language/,ProgrammingLanguages,85265,2
My programming language can now run in a browser.,101,iehbmj,https://www.reddit.com/r/ProgrammingLanguages/comments/iehbmj/my_programming_language_can_now_run_in_a_browser/,63,1598098089.0,FlatAssembler,0.95,/r/ProgrammingLanguages/comments/iehbmj/my_programming_language_can_now_run_in_a_browser/,ProgrammingLanguages,85265,2
C3 is a C-like language trying to be an incremental improvement over C rather than a whole new language.,101,oohij6,https://github.com/c3lang/c3c,26,1626836908.0,beleeee_dat,0.97,/r/ProgrammingLanguages/comments/oohij6/c3_is_a_clike_language_trying_to_be_an/,ProgrammingLanguages,85265,2
"Making PL Ideas Accessible: An Open-Source, Open-Access, Interactive Journal",95,mqpsdc,https://blog.sigplan.org/2021/04/13/making-pl-ideas-accessible-an-open-source-open-access-interactive-journal/,1,1618404290.0,azhenley,1.0,/r/ProgrammingLanguages/comments/mqpsdc/making_pl_ideas_accessible_an_opensource/,ProgrammingLanguages,85265,2
Local Variables · Crafting Interpreters,96,b56uit,http://www.craftinginterpreters.com/local-variables.html,0,1553493088.0,mttd,0.99,/r/ProgrammingLanguages/comments/b56uit/local_variables_crafting_interpreters/,ProgrammingLanguages,85265,2
Const generics and compile time code,96,mkjz1r,https://www.youtube.com/watch?v=imbZbGnnNd4,9,1617627152.0,tjpalmer,0.97,/r/ProgrammingLanguages/comments/mkjz1r/const_generics_and_compile_time_code/,ProgrammingLanguages,85265,2
Columbia's Alfred Aho and Stanford's Jeffrey Ullman receive 2020 ACM A.M. Turing Award,96,mh6c9u,https://awards.acm.org/about/2020-turing,16,1617198033.0,suhcoR,1.0,/r/ProgrammingLanguages/comments/mh6c9u/columbias_alfred_aho_and_stanfords_jeffrey_ullman/,ProgrammingLanguages,85265,2
ZZ is a modern formally provable dialect of C,98,ez9k1g,https://github.com/aep/zz,10,1580909316.0,yorickpeterse,0.96,/r/ProgrammingLanguages/comments/ez9k1g/zz_is_a_modern_formally_provable_dialect_of_c/,ProgrammingLanguages,85265,2
"Yesterday, I posted here about a StackExchange site proposal for Programming Language Design. It's moved into the Commitment Phase of the proposal process and needs your help to become a proper site!",97,10v554r,https://area51.stackexchange.com/proposals/127456/programming-language-design-and-implementation,15,1675685680.0,Ghost_Of_Memes_Past,0.93,/r/ProgrammingLanguages/comments/10v554r/yesterday_i_posted_here_about_a_stackexchange/,ProgrammingLanguages,85265,2
"Scallop: a new neurosymbolic programming language, solver, and framework based on Datalog",96,u5ti39,https://scallop-lang.github.io/,5,1650221447.0,mttd,0.98,/r/ProgrammingLanguages/comments/u5ti39/scallop_a_new_neurosymbolic_programming_language/,ProgrammingLanguages,85265,2
Does the programming language design community have a bias in favor of functional programming?,97,uh0sez,https://www.reddit.com/r/ProgrammingLanguages/comments/uh0sez/does_the_programming_language_design_community/,131,1651528527.0,jmhimara,0.96,/r/ProgrammingLanguages/comments/uh0sez/does_the_programming_language_design_community/,ProgrammingLanguages,85265,2
Fearless concurrency at a discount? • PL Papers You Might Love,94,ug1s18,https://newsletter.papersyoumightlove.pl/archive/fearless-concurrency-at-a-discount/,2,1651417461.0,typesanitizer,0.98,/r/ProgrammingLanguages/comments/ug1s18/fearless_concurrency_at_a_discount_pl_papers_you/,ProgrammingLanguages,85265,2
Dr. Dobb's Journal,95,sjwcwg,https://www.reddit.com/r/ProgrammingLanguages/comments/sjwcwg/dr_dobbs_journal/,22,1643927304.0,Inconstant_Moo,0.97,/r/ProgrammingLanguages/comments/sjwcwg/dr_dobbs_journal/,ProgrammingLanguages,85265,2
Video: Derivative of a Regex?! (Brzozowski Derivative),96,khec43,https://www.youtube.com/watch?v=s9EPoy9r-ok&ab_channel=EasyTheory,20,1608544522.0,oilshell,0.96,/r/ProgrammingLanguages/comments/khec43/video_derivative_of_a_regex_brzozowski_derivative/,ProgrammingLanguages,85265,2
Calls and Functions · Crafting Interpreters,93,chjqgk,http://craftinginterpreters.com/calls-and-functions.html,11,1564034174.0,mttd,0.97,/r/ProgrammingLanguages/comments/chjqgk/calls_and_functions_crafting_interpreters/,ProgrammingLanguages,85265,2
The Val Programming Language,95,xk3sum,https://www.val-lang.dev/,28,1663764004.0,yorickpeterse,0.98,/r/ProgrammingLanguages/comments/xk3sum/the_val_programming_language/,ProgrammingLanguages,85265,2
The Golden Age of Programming Languages Research,94,xekv5s,https://semantic-domain.blogspot.com/2022/09/the-golden-age-of-pl-research.html,26,1663209542.0,mttd,1.0,/r/ProgrammingLanguages/comments/xekv5s/the_golden_age_of_programming_languages_research/,ProgrammingLanguages,85265,2
"Why Does ""="" Mean Assignment? • Hillel Wayne",96,fg0d1b,https://www.hillelwayne.com/post/equals-as-assignment/,78,1583782544.0,bjzaba,0.97,/r/ProgrammingLanguages/comments/fg0d1b/why_does_mean_assignment_hillel_wayne/,ProgrammingLanguages,85265,2
Methods and Initializers · Crafting Interpreters,98,f6twl0,http://craftinginterpreters.com/methods-and-initializers.html,2,1582209254.0,mttd,1.0,/r/ProgrammingLanguages/comments/f6twl0/methods_and_initializers_crafting_interpreters/,ProgrammingLanguages,85265,2
Alan Kay turns 80 today! Happy Birthday!,95,glg06o,https://en.wikipedia.org/wiki/Alan_Kay,1,1589724622.0,suhcoR,0.98,/r/ProgrammingLanguages/comments/glg06o/alan_kay_turns_80_today_happy_birthday/,ProgrammingLanguages,85265,2
Programming language design - course materials,95,11le4wn,https://d3s.mff.cuni.cz/teaching/nprg075/,5,1678229285.0,mttd,0.99,/r/ProgrammingLanguages/comments/11le4wn/programming_language_design_course_materials/,ProgrammingLanguages,85265,2
"Rust is hard, or: The misery of mainstream programming",94,v3clru,https://hirrolot.github.io/posts/rust-is-hard-or-the-misery-of-mainstream-programming.html,204,1654186813.0,Hirrolot,0.92,/r/ProgrammingLanguages/comments/v3clru/rust_is_hard_or_the_misery_of_mainstream/,ProgrammingLanguages,85265,2
PLTea (in 30 minutes),92,l765af,https://pltea.github.io/,2,1611862176.0,hackerfoo,0.96,/r/ProgrammingLanguages/comments/l765af/pltea_in_30_minutes/,ProgrammingLanguages,85265,2
GitHub - marcpaq/b1fipl: A Bestiary of Single-File Implementations of Programming Languages,90,f30wxi,https://github.com/marcpaq/b1fipl,1,1581552642.0,bjzaba,0.97,/r/ProgrammingLanguages/comments/f30wxi/github_marcpaqb1fipl_a_bestiary_of_singlefile/,ProgrammingLanguages,85265,2
Free: a programming language with an unusual compiler backend,92,exl0h5,https://www.reddit.com/r/ProgrammingLanguages/comments/exl0h5/free_a_programming_language_with_an_unusual/,4,1580629053.0,adamthekiwi99,0.95,/r/ProgrammingLanguages/comments/exl0h5/free_a_programming_language_with_an_unusual/,ProgrammingLanguages,85265,2
A simple Glide program that reads and transforms CSV data,87,ygcnz3,https://v.redd.it/iud658gx0pw91,19,1667026823.0,dibs45,0.99,/r/ProgrammingLanguages/comments/ygcnz3/a_simple_glide_program_that_reads_and_transforms/,ProgrammingLanguages,85265,2
How were compilers able to fit and run in computers from the 60s and 70s?,90,w1a86k,https://www.reddit.com/r/ProgrammingLanguages/comments/w1a86k/how_were_compilers_able_to_fit_and_run_in/,62,1658072456.0,GabiNaali,0.98,/r/ProgrammingLanguages/comments/w1a86k/how_were_compilers_able_to_fit_and_run_in/,ProgrammingLanguages,85265,2
Favorite Feature in YOUR programming language?,94,tjw9uv,https://www.reddit.com/r/ProgrammingLanguages/comments/tjw9uv/favorite_feature_in_your_programming_language/,110,1647929072.0,Uploft,0.98,/r/ProgrammingLanguages/comments/tjw9uv/favorite_feature_in_your_programming_language/,ProgrammingLanguages,85265,2
A tree-sitter based AST difftool to get meaningful semantic diffs,87,omy0so,https://github.com/afnanenayet/diffsitter,10,1626638190.0,beleeee_dat,0.98,/r/ProgrammingLanguages/comments/omy0so/a_treesitter_based_ast_difftool_to_get_meaningful/,ProgrammingLanguages,85265,2
Everything Old is New Again: Binary Security of WebAssembly,87,icb9ve,https://www.usenix.org/conference/usenixsecurity20/presentation/lehmann,41,1597789753.0,oilshell,0.97,/r/ProgrammingLanguages/comments/icb9ve/everything_old_is_new_again_binary_security_of/,ProgrammingLanguages,85265,2
How do you get a job designing a programming language?,91,xnb76i,https://www.reddit.com/r/ProgrammingLanguages/comments/xnb76i/how_do_you_get_a_job_designing_a_programming/,33,1664073165.0,pythoncircus,0.97,/r/ProgrammingLanguages/comments/xnb76i/how_do_you_get_a_job_designing_a_programming/,ProgrammingLanguages,85265,2
New Coq tutorial,89,vrtld1,https://www.reddit.com/r/ProgrammingLanguages/comments/vrtld1/new_coq_tutorial/,20,1657011973.0,stepstep,0.98,/r/ProgrammingLanguages/comments/vrtld1/new_coq_tutorial/,ProgrammingLanguages,85265,2
The Race to Replace C & C++ (2.0),89,qwsol9,https://media.handmade-seattle.com/the-race-to-replace-c-and-cpp-2/,162,1637250727.0,gingerbill,0.9,/r/ProgrammingLanguages/comments/qwsol9/the_race_to_replace_c_c_20/,ProgrammingLanguages,85265,2
An experimental O(1) Garbage Collector,91,jxwfzp,https://github.com/dkopko/klox,18,1605902935.0,yorickpeterse,0.98,/r/ProgrammingLanguages/comments/jxwfzp/an_experimental_o1_garbage_collector/,ProgrammingLanguages,85265,2
"What are the ""poison pills"" to avoid when designing a language for performance?",90,8ud5am,https://www.reddit.com/r/ProgrammingLanguages/comments/8ud5am/what_are_the_poison_pills_to_avoid_when_designing/,38,1530131937.0,vanderZwan,0.99,/r/ProgrammingLanguages/comments/8ud5am/what_are_the_poison_pills_to_avoid_when_designing/,ProgrammingLanguages,85265,2
"In my language, inverse functions generalize pattern matching",90,qraed1,https://www.reddit.com/r/ProgrammingLanguages/comments/qraed1/in_my_language_inverse_functions_generalize/,23,1636596886.0,useerup,1.0,/r/ProgrammingLanguages/comments/qraed1/in_my_language_inverse_functions_generalize/,ProgrammingLanguages,85265,2
Glide (Now Open Source),84,yppqpq,https://v.redd.it/coxa4vx8yqy91,9,1667921776.0,dibs45,0.98,/r/ProgrammingLanguages/comments/yppqpq/glide_now_open_source/,ProgrammingLanguages,85265,2
Counterexamples in Type Systems,88,w5yb62,https://counterexamples.org/,18,1658562489.0,PurpleUpbeat2820,0.97,/r/ProgrammingLanguages/comments/w5yb62/counterexamples_in_type_systems/,ProgrammingLanguages,85265,2
Interview with Odin programming language creator Ginger Bill,87,quhc3b,https://www.youtube.com/watch?v=2YLA4ajby00,2,1636985567.0,gingerbill,0.97,/r/ProgrammingLanguages/comments/quhc3b/interview_with_odin_programming_language_creator/,ProgrammingLanguages,85265,2
"Compiling to Assembly from Scratch: the book's compiler ported to Python, OCaml, Rust",87,mlw26i,https://github.com/keleshev/compiling-to-assembly-from-scratch/tree/main/contrib,2,1617777260.0,halst,0.96,/r/ProgrammingLanguages/comments/mlw26i/compiling_to_assembly_from_scratch_the_books/,ProgrammingLanguages,85265,2
Wisp: A light lisp written in C++,88,klo1xy,https://www.reddit.com/r/ProgrammingLanguages/comments/klo1xy/wisp_a_light_lisp_written_in_c/,8,1609151170.0,adamthekiwi99,0.99,/r/ProgrammingLanguages/comments/klo1xy/wisp_a_light_lisp_written_in_c/,ProgrammingLanguages,85265,2
Cppfront: Herb Sutter's personal experimental C++ Syntax 2 -> Syntax 1 compiler,83,xgcb7h,https://github.com/hsutter/cppfront,28,1663388126.0,mttd,0.94,/r/ProgrammingLanguages/comments/xgcb7h/cppfront_herb_sutters_personal_experimental_c/,ProgrammingLanguages,85265,2
"Chumsky: an ergonomic Rust-y parser combinator library with support for rich error messages, multiple error recovery, infallible parsing, LL(k) grammars, and much more",84,qhygrb,https://crates.io/crates/chumsky,6,1635460836.0,zesterer,0.96,/r/ProgrammingLanguages/comments/qhygrb/chumsky_an_ergonomic_rusty_parser_combinator/,ProgrammingLanguages,85265,2
Next-gen Haskell Compilation Techniques [video],88,ktjykf,https://youtu.be/jyaR8E325ok,0,1610166900.0,typesanitizer,0.97,/r/ProgrammingLanguages/comments/ktjykf/nextgen_haskell_compilation_techniques_video/,ProgrammingLanguages,85265,2
ALGOL 60 at 60: The greatest computer language you've never used and grandaddy of the programming family tree,84,gklgaa,https://www.theregister.co.uk/2020/05/15/algol_60_at_60/,20,1589590562.0,bjzaba,0.97,/r/ProgrammingLanguages/comments/gklgaa/algol_60_at_60_the_greatest_computer_language/,ProgrammingLanguages,85265,2
Language wars: the personal factor,88,106ah7j,https://www.reddit.com/r/ProgrammingLanguages/comments/106ah7j/language_wars_the_personal_factor/,40,1673154482.0,Inconstant_Moo,0.9,/r/ProgrammingLanguages/comments/106ah7j/language_wars_the_personal_factor/,ProgrammingLanguages,85265,2
What does OO do well?,87,yzrhir,https://www.reddit.com/r/ProgrammingLanguages/comments/yzrhir/what_does_oo_do_well/,182,1668907003.0,sintrastes,0.97,/r/ProgrammingLanguages/comments/yzrhir/what_does_oo_do_well/,ProgrammingLanguages,85265,2
Breaking out of all loops without using GOTO,87,qah8lt,https://www.reddit.com/gallery/qah8lt,75,1634539663.0,dibs45,0.89,/r/ProgrammingLanguages/comments/qah8lt/breaking_out_of_all_loops_without_using_goto/,ProgrammingLanguages,85265,2
How to learn type checking and type theory?,85,pjkdzf,https://www.reddit.com/r/ProgrammingLanguages/comments/pjkdzf/how_to_learn_type_checking_and_type_theory/,44,1631010501.0,RepresentativeNo6029,0.99,/r/ProgrammingLanguages/comments/pjkdzf/how_to_learn_type_checking_and_type_theory/,ProgrammingLanguages,85265,2
There is no escape from Futhark,84,o8znb4,https://futhark-lang.org/blog/2021-06-27-no-escape.html,7,1624808935.0,Athas,0.96,/r/ProgrammingLanguages/comments/o8znb4/there_is_no_escape_from_futhark/,ProgrammingLanguages,85265,2
Two pattern matching algorithms implemented in Rust,84,v1zaxh,https://gitlab.com/yorickpeterse/pattern-matching-in-rust/,10,1654028923.0,yorickpeterse,0.97,/r/ProgrammingLanguages/comments/v1zaxh/two_pattern_matching_algorithms_implemented_in/,ProgrammingLanguages,85265,2
The past and present of Futhark,87,rrdnm6,https://futhark-lang.org/blog/2021-12-19-past-and-present.html,13,1640799304.0,Athas,0.98,/r/ProgrammingLanguages/comments/rrdnm6/the_past_and_present_of_futhark/,ProgrammingLanguages,85265,2
Why are bytecode interpreters faster than tree-walking interpreters?,80,ppy4dr,https://www.reddit.com/r/ProgrammingLanguages/comments/ppy4dr/why_are_bytecode_interpreters_faster_than/,37,1631877068.0,sheepshapesoap,0.99,/r/ProgrammingLanguages/comments/ppy4dr/why_are_bytecode_interpreters_faster_than/,ProgrammingLanguages,85265,2
Discover ‘deep’ programming language bugs with Xsmith,85,mgfadv,https://www.youtube.com/watch?v=8bfFdPmaA4Q,4,1617108645.0,mttd,0.99,/r/ProgrammingLanguages/comments/mgfadv/discover_deep_programming_language_bugs_with/,ProgrammingLanguages,85265,2
Interview with Crystal language creators,86,jqzkof,https://youtu.be/i9_6IfiPtOI,13,1604935557.0,tjpalmer,0.97,/r/ProgrammingLanguages/comments/jqzkof/interview_with_crystal_language_creators/,ProgrammingLanguages,85265,2
"Oak: an infinitely portable language powered by secret, brainf*%! inspired technology.",80,hxzb7u,https://github.com/adam-mcdaniel/oakc,0,1595731685.0,adamthekiwi99,0.89,/r/ProgrammingLanguages/comments/hxzb7u/oak_an_infinitely_portable_language_powered_by/,ProgrammingLanguages,85265,2
What's your opinion on ChatGPT related posts?,85,11ta0eh,https://www.reddit.com/r/ProgrammingLanguages/comments/11ta0eh/whats_your_opinion_on_chatgpt_related_posts/,48,1679009279.0,yorickpeterse,0.96,/r/ProgrammingLanguages/comments/11ta0eh/whats_your_opinion_on_chatgpt_related_posts/,ProgrammingLanguages,85265,2
Writability of Programming Languages (Part 1),84,10uzi0q,https://www.reddit.com/r/ProgrammingLanguages/comments/10uzi0q/writability_of_programming_languages_part_1/,81,1675664133.0,Uploft,0.9,/r/ProgrammingLanguages/comments/10uzi0q/writability_of_programming_languages_part_1/,ProgrammingLanguages,85265,2
"Vale 0.2 Released: Higher RAII, Concept Functions, Const Generics, FFI, Modules, Faster Compiles, set Keyword",83,uoap02,https://verdagon.dev/blog/version-0.2-released,45,1652388343.0,verdagon,0.95,/r/ProgrammingLanguages/comments/uoap02/vale_02_released_higher_raii_concept_functions/,ProgrammingLanguages,85265,2
Design Flaws in Futhark,83,ecc1fo,https://futhark-lang.org/blog/2019-12-18-design-flaws-in-futhark.html,37,1576672473.0,Athas,0.99,/r/ProgrammingLanguages/comments/ecc1fo/design_flaws_in_futhark/,ProgrammingLanguages,85265,2
IntercalScript: A satirical self-hosted language with alegbraic subtyping,83,e84bqd,https://github.com/Storyyeller/IntercalScript,28,1575862389.0,Uncaffeinated,0.97,/r/ProgrammingLanguages/comments/e84bqd/intercalscript_a_satirical_selfhosted_language/,ProgrammingLanguages,85265,2
What's a good general-purpose programming language?,83,uc9hsl,https://www.avestura.dev/blog/ideal-programming-language,99,1650969235.0,avestura,0.91,/r/ProgrammingLanguages/comments/uc9hsl/whats_a_good_generalpurpose_programming_language/,ProgrammingLanguages,85265,2
A Flexible Type System for Fearless Concurrency,82,tyiztq,https://www.cs.cornell.edu/andru/papers/gallifrey-types/,10,1649354992.0,mttd,1.0,/r/ProgrammingLanguages/comments/tyiztq/a_flexible_type_system_for_fearless_concurrency/,ProgrammingLanguages,85265,2
History of Programming Languages: Lectures,82,n2nfwm,https://felleisen.org/matthias/7480-s21/lectures.html,0,1619891514.0,mttd,0.98,/r/ProgrammingLanguages/comments/n2nfwm/history_of_programming_languages_lectures/,ProgrammingLanguages,85265,2
Are there any interesting programming languages based on particular data structures?,81,lliyuo,https://www.reddit.com/r/ProgrammingLanguages/comments/lliyuo/are_there_any_interesting_programming_languages/,79,1613525849.0,sebamestre,0.97,/r/ProgrammingLanguages/comments/lliyuo/are_there_any_interesting_programming_languages/,ProgrammingLanguages,85265,2
Is there a gap between how developers think compilers work and how they actually work?,81,j0uncm,https://www.reddit.com/r/ProgrammingLanguages/comments/j0uncm/is_there_a_gap_between_how_developers_think/,33,1601226356.0,FlatAssembler,0.94,/r/ProgrammingLanguages/comments/j0uncm/is_there_a_gap_between_how_developers_think/,ProgrammingLanguages,85265,2
Optimization · Crafting Interpreters,82,fvldlp,http://craftinginterpreters.com/optimization.html,10,1586120729.0,mttd,0.98,/r/ProgrammingLanguages/comments/fvldlp/optimization_crafting_interpreters/,ProgrammingLanguages,85265,2
"26 programming languages in 25 days, Part 2: Reflections on language design",82,101zgrn,https://matt.might.net/articles/26-languages-part2/,43,1672724226.0,mttd,0.93,/r/ProgrammingLanguages/comments/101zgrn/26_programming_languages_in_25_days_part_2/,ProgrammingLanguages,85265,2
Programming Languages: Application and Interpretation (PLAI): Third Edition Released!,80,zgmc7v,https://www.plai.org/,11,1670558785.0,mttd,0.96,/r/ProgrammingLanguages/comments/zgmc7v/programming_languages_application_and/,ProgrammingLanguages,85265,2
Modules: Overcoming Stockholm and Duning-Kruger,82,vqx19e,https://www.reddit.com/r/ProgrammingLanguages/comments/vqx19e/modules_overcoming_stockholm_and_duningkruger/,44,1656901475.0,PegasusAndAcorn,0.93,/r/ProgrammingLanguages/comments/vqx19e/modules_overcoming_stockholm_and_duningkruger/,ProgrammingLanguages,85265,2
One weird trick to make your simple code gen (almost) as fast as C,79,v1ab6f,https://www.reddit.com/r/ProgrammingLanguages/comments/v1ab6f/one_weird_trick_to_make_your_simple_code_gen/,27,1653945913.0,PurpleUpbeat2820,0.97,/r/ProgrammingLanguages/comments/v1ab6f/one_weird_trick_to_make_your_simple_code_gen/,ProgrammingLanguages,85265,2
An idea for a `.=` operator,80,rleiot,https://www.reddit.com/r/ProgrammingLanguages/comments/rleiot/an_idea_for_a_operator/,84,1640092730.0,faiface,0.88,/r/ProgrammingLanguages/comments/rleiot/an_idea_for_a_operator/,ProgrammingLanguages,85265,2
Philosophies of Rust and Haskell,81,kvgpq4,https://www.fpcomplete.com/blog/philosophies-rust-haskell/,3,1610413249.0,bjzaba,1.0,/r/ProgrammingLanguages/comments/kvgpq4/philosophies_of_rust_and_haskell/,ProgrammingLanguages,85265,2
“Parsing Algorithms” full course is now available,80,jij6mj,http://dmitrysoshnikov.com/courses/parsing-algorithms/,0,1603734165.0,azhenley,1.0,/r/ProgrammingLanguages/comments/jij6mj/parsing_algorithms_full_course_is_now_available/,ProgrammingLanguages,85265,2
"Hakaru: a simply-typed probabilistic programming language, designed for easy specification of probabilistic models and inference algorithms",80,hejono,http://hakaru-dev.github.io/,4,1592935747.0,hackerfoo,0.98,/r/ProgrammingLanguages/comments/hejono/hakaru_a_simplytyped_probabilistic_programming/,ProgrammingLanguages,85265,2
Superclasses · Crafting Interpreters,82,fkri11,http://craftinginterpreters.com/superclasses.html,2,1584545957.0,mttd,0.98,/r/ProgrammingLanguages/comments/fkri11/superclasses_crafting_interpreters/,ProgrammingLanguages,85265,2
C3 (a C-like language) now has a domain,80,e1vv55,https://www.reddit.com/r/ProgrammingLanguages/comments/e1vv55/c3_a_clike_language_now_has_a_domain/,70,1574762179.0,Nuoji,0.93,/r/ProgrammingLanguages/comments/e1vv55/c3_a_clike_language_now_has_a_domain/,ProgrammingLanguages,85265,2
pLam now supports Lists with list library! Check it out and play around,79,cuwy29,https://i.redd.it/byygpo0qtfi31.gif,8,1566670489.0,Sandro_Lovnicki,0.97,/r/ProgrammingLanguages/comments/cuwy29/plam_now_supports_lists_with_list_library_check/,ProgrammingLanguages,85265,2
ACM Transactions on Programming Languages and Systems (TOPLAS): all papers (since the 1979 beginning) now open access,79,se5e1j,https://dl.acm.org/journal/toplas,3,1643308940.0,mttd,0.98,/r/ProgrammingLanguages/comments/se5e1j/acm_transactions_on_programming_languages_and/,ProgrammingLanguages,85265,2
Why Static Languages Suffer From Complexity,80,s7shox,https://hirrolot.github.io/posts/why-static-languages-suffer-from-complexity,56,1642605752.0,Hirrolot,0.91,/r/ProgrammingLanguages/comments/s7shox/why_static_languages_suffer_from_complexity/,ProgrammingLanguages,85265,2
Safe Systems Programming in Rust,79,mb07jg,https://cacm.acm.org/magazines/2021/4/251364-safe-systems-programming-in-rust/fulltext,3,1616453480.0,bjzaba,0.94,/r/ProgrammingLanguages/comments/mb07jg/safe_systems_programming_in_rust/,ProgrammingLanguages,85265,2
What is the unit of a text column number?,80,lmno8w,https://foonathan.net/2021/02/column/,12,1613657650.0,foonathan,0.98,/r/ProgrammingLanguages/comments/lmno8w/what_is_the_unit_of_a_text_column_number/,ProgrammingLanguages,85265,2
GRIN is a compiler back-end for lazy and strict functional languages with whole program optimization support,79,j4xbuv,https://github.com/grin-compiler/grin,24,1601810100.0,hou32hou,0.96,/r/ProgrammingLanguages/comments/j4xbuv/grin_is_a_compiler_backend_for_lazy_and_strict/,ProgrammingLanguages,85265,2
Silq: The first intuitive programming language for quantum computers,78,hcnrk9,https://ethz.ch/en/news-and-events/eth-news/news/2020/06/the-first-intuitive-programming-language-for-quantum-computers.html,10,1592665607.0,jsamwrites,0.93,/r/ProgrammingLanguages/comments/hcnrk9/silq_the_first_intuitive_programming_language_for/,ProgrammingLanguages,85265,2
Interpreter Generators: A Brief Look at Existing Work,80,o16mf6,https://stefan-marr.de/2021/06/interpreter-generators/,4,1623854873.0,mttd,1.0,/r/ProgrammingLanguages/comments/o16mf6/interpreter_generators_a_brief_look_at_existing/,ProgrammingLanguages,85265,2
Futhark 0.19.1 released,79,lxowxl,https://futhark-lang.org/blog/2021-03-04-futhark-0.19.1-released.html,5,1614876046.0,Athas,0.99,/r/ProgrammingLanguages/comments/lxowxl/futhark_0191_released/,ProgrammingLanguages,85265,2
"I wrote a long-ish comment about bidirectional type checking. It was well received, so I posted it on my blog.",79,v7ddn0,https://sebmestre.blogspot.com/2022/06/bidirectional-type-checking.html,11,1654651559.0,sebamestre,0.96,/r/ProgrammingLanguages/comments/v7ddn0/i_wrote_a_longish_comment_about_bidirectional/,ProgrammingLanguages,85265,2
Provably Space-Efficient Parallel Functional Programming,80,s37h5r,https://blog.sigplan.org/2022/01/13/provably-space-efficient-parallel-functional-programming/,40,1642102144.0,mttd,0.96,/r/ProgrammingLanguages/comments/s37h5r/provably_spaceefficient_parallel_functional/,ProgrammingLanguages,85265,2
"A small, portable Scheme implementation with AOT and incremental compilers that fits in 4 kilobytes",79,r49hhz,https://github.com/udem-dlteam/ribbit,2,1638120578.0,oilshell,0.99,/r/ProgrammingLanguages/comments/r49hhz/a_small_portable_scheme_implementation_with_aot/,ProgrammingLanguages,85265,2
"Would a functional language like Haskell be worse off in developing a compiler as opposed to a systems language like Rust, C, etc?",82,odnfvo,https://www.reddit.com/r/ProgrammingLanguages/comments/odnfvo/would_a_functional_language_like_haskell_be_worse/,82,1625414839.0,Aloys1us_Bl00m,0.99,/r/ProgrammingLanguages/comments/odnfvo/would_a_functional_language_like_haskell_be_worse/,ProgrammingLanguages,85265,2
Finding the Bottom Turtle,78,o4or5d,https://blog.dave.tf/post/finding-bottom-turtle/,11,1624256442.0,bjzaba,1.0,/r/ProgrammingLanguages/comments/o4or5d/finding_the_bottom_turtle/,ProgrammingLanguages,85265,2
Four Features That Justify a New Unix Shell,76,jgaho6,http://www.oilshell.org/blog/2020/10/osh-features.html,20,1603406743.0,oilshell,0.94,/r/ProgrammingLanguages/comments/jgaho6/four_features_that_justify_a_new_unix_shell/,ProgrammingLanguages,85265,2
Will a dynamically typed language eventually need optional static typing?,82,ipvyx2,https://www.reddit.com/r/ProgrammingLanguages/comments/ipvyx2/will_a_dynamically_typed_language_eventually_need/,124,1599709980.0,jesseschalken,0.97,/r/ProgrammingLanguages/comments/ipvyx2/will_a_dynamically_typed_language_eventually_need/,ProgrammingLanguages,85265,2
"The Registers of Rust - Without boats, dreams dry up",75,11nzw0x,https://without.boats/blog/the-registers-of-rust/,18,1678480081.0,Uncaffeinated,0.97,/r/ProgrammingLanguages/comments/11nzw0x/the_registers_of_rust_without_boats_dreams_dry_up/,ProgrammingLanguages,85265,2
End of a language feature,76,wp1cy0,https://futhark-lang.org/blog/2022-08-15-end-of-a-language-feature.html,5,1660574384.0,Athas,0.97,/r/ProgrammingLanguages/comments/wp1cy0/end_of_a_language_feature/,ProgrammingLanguages,85265,2
The appeal of bidirectional type-checking,76,v3z7r8,https://www.haskellforall.com/2022/06/the-appeal-of-bidirectional-type.html,47,1654262266.0,Tekmo,0.95,/r/ProgrammingLanguages/comments/v3z7r8/the_appeal_of_bidirectional_typechecking/,ProgrammingLanguages,85265,2
Type Theory's type universe: What is the type of `Type`?,77,tjev87,https://www.avestura.dev/blog/what-is-the-type-of-type,9,1647877775.0,avestura,0.95,/r/ProgrammingLanguages/comments/tjev87/type_theorys_type_universe_what_is_the_type_of/,ProgrammingLanguages,85265,2
"Infinite loops: a side-effect, or an implementation detail?",75,tdlff4,https://www.reddit.com/r/ProgrammingLanguages/comments/tdlff4/infinite_loops_a_sideeffect_or_an_implementation/,45,1647219945.0,zesterer,0.97,/r/ProgrammingLanguages/comments/tdlff4/infinite_loops_a_sideeffect_or_an_implementation/,ProgrammingLanguages,85265,2
Friendship ended with Monads: Testing out Algebraic effects in OCaml for Animations,77,ksdjsf,https://gopiandcode.uk/logs/log-bye-bye-monads-algebraic-effects.html,20,1610027132.0,mttd,0.99,/r/ProgrammingLanguages/comments/ksdjsf/friendship_ended_with_monads_testing_out/,ProgrammingLanguages,85265,2
Exotic Programming Ideas: Part 3 (Effect Systems),80,jz36fl,https://www.stephendiehl.com/posts/exotic03.html,19,1606078035.0,bjzaba,1.0,/r/ProgrammingLanguages/comments/jz36fl/exotic_programming_ideas_part_3_effect_systems/,ProgrammingLanguages,85265,2
Idris 2: Quantitative Type Theory in Action,77,gfyjpe,https://www.type-driven.org.uk/edwinb/idris-2-quantitative-type-theory-in-action.html,0,1588962278.0,mttd,0.97,/r/ProgrammingLanguages/comments/gfyjpe/idris_2_quantitative_type_theory_in_action/,ProgrammingLanguages,85265,2
Carpentry Compiler,76,eh1sfy,https://grail.cs.washington.edu/projects/carpentrycompiler/,4,1577595438.0,mttd,0.95,/r/ProgrammingLanguages/comments/eh1sfy/carpentry_compiler/,ProgrammingLanguages,85265,2
The Next 7000 Programming Languages,79,dpnmzl,https://link.springer.com/chapter/10.1007/978-3-319-91908-9_15,23,1572529000.0,mttd,0.97,/r/ProgrammingLanguages/comments/dpnmzl/the_next_7000_programming_languages/,ProgrammingLanguages,85265,2
Ownership vs full immutability,76,uxtcme,https://www.reddit.com/r/ProgrammingLanguages/comments/uxtcme/ownership_vs_full_immutability/,50,1653519096.0,RepresentativeNo6029,0.94,/r/ProgrammingLanguages/comments/uxtcme/ownership_vs_full_immutability/,ProgrammingLanguages,85265,2
Why is PHP like that?,76,uk0r4t,https://www.reddit.com/r/ProgrammingLanguages/comments/uk0r4t/why_is_php_like_that/,73,1651881364.0,Inconstant_Moo,0.93,/r/ProgrammingLanguages/comments/uk0r4t/why_is_php_like_that/,ProgrammingLanguages,85265,2
How Futhark represents values at runtime,74,owcyzc,https://futhark-lang.org/blog/2021-08-02-value-representation.html,2,1627905441.0,Athas,0.99,/r/ProgrammingLanguages/comments/owcyzc/how_futhark_represents_values_at_runtime/,ProgrammingLanguages,85265,2
The new Oberon+ programming language – modern simplicity,78,olgfrt,http://oberon-lang.ch,21,1626440545.0,suhcoR,0.95,/r/ProgrammingLanguages/comments/olgfrt/the_new_oberon_programming_language_modern/,ProgrammingLanguages,85265,2
Why Typing Erlang is Hard: Standard Erlang,76,jpic88,https://abstractmachines.dev/posts/am012-why-typing-erlang-is-hard.html,17,1604714340.0,bjzaba,0.98,/r/ProgrammingLanguages/comments/jpic88/why_typing_erlang_is_hard_standard_erlang/,ProgrammingLanguages,85265,2
basil: A Lightweight metaprogramming language,76,jfqdxg,https://github.com/basilTeam/basil,28,1603330794.0,oilshell,0.98,/r/ProgrammingLanguages/comments/jfqdxg/basil_a_lightweight_metaprogramming_language/,ProgrammingLanguages,85265,2
An Introduction to Efficient and Safe Implementations of Dynamic Languages,75,hgiuyb,https://stefan-marr.de/2020/06/efficient-and-safe-implementations-of-dynamic-languages/,3,1593215091.0,mttd,0.97,/r/ProgrammingLanguages/comments/hgiuyb/an_introduction_to_efficient_and_safe/,ProgrammingLanguages,85265,2
"Atto, an insanely tiny self-hosted functional programming language",77,avvma5,https://github.com/zesterer/atto,29,1551384905.0,zesterer,0.98,/r/ProgrammingLanguages/comments/avvma5/atto_an_insanely_tiny_selfhosted_functional/,ProgrammingLanguages,85265,2
"APL was famously designed as notation for working out programming on blackboards first. Are there any other languages specifically designed for ""pen and paper"" programming?",75,1086pnq,https://www.reddit.com/r/ProgrammingLanguages/comments/1086pnq/apl_was_famously_designed_as_notation_for_working/,33,1673347054.0,vanderZwan,0.99,/r/ProgrammingLanguages/comments/1086pnq/apl_was_famously_designed_as_notation_for_working/,ProgrammingLanguages,85265,2
"Lambdas, Nested Functions, and Blocks, oh my! (On the lambdas proposal for C23)",74,omau26,https://thephd.dev/lambdas-nested-functions-block-expressions-oh-my,46,1626549760.0,mttd,0.99,/r/ProgrammingLanguages/comments/omau26/lambdas_nested_functions_and_blocks_oh_my_on_the/,ProgrammingLanguages,85265,2
Metalang99: Full-blown preprocessor metaprogramming for pure C,73,medyz8,https://github.com/Hirrolot/metalang99,1,1616852346.0,Hirrolot,0.95,/r/ProgrammingLanguages/comments/medyz8/metalang99_fullblown_preprocessor_metaprogramming/,ProgrammingLanguages,85265,2
The first two posts about making a language with Rust are out!,75,ip9xhv,https://arzg.github.io/lang/0,2,1599628422.0,sheepshapesoap,0.92,/r/ProgrammingLanguages/comments/ip9xhv/the_first_two_posts_about_making_a_language_with/,ProgrammingLanguages,85265,2
"An Incremental Approach to Compiler Construction - Jaseem Abid [video, Papers We Love London 2019]",74,ferjxa,https://www.youtube.com/watch?v=WBWRkUuyuE0,21,1583563790.0,cutculus,0.95,/r/ProgrammingLanguages/comments/ferjxa/an_incremental_approach_to_compiler_construction/,ProgrammingLanguages,85265,2
"Parse, don’t validate",75,dszj7b,https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/,25,1573141605.0,mttd,0.92,/r/ProgrammingLanguages/comments/dszj7b/parse_dont_validate/,ProgrammingLanguages,85265,2
The Fascinating Influence of Cyclone,75,dbh4jn,http://pling.jondgoodwin.com/post/cyclone/,4,1569872916.0,PegasusAndAcorn,1.0,/r/ProgrammingLanguages/comments/dbh4jn/the_fascinating_influence_of_cyclone/,ProgrammingLanguages,85265,2
Introductory resources to type theory for language implementers,72,uhgl4o,https://www.haskellforall.com/2022/05/introductory-resources-to-type-theory.html,11,1651585929.0,Tekmo,0.99,/r/ProgrammingLanguages/comments/uhgl4o/introductory_resources_to_type_theory_for/,ProgrammingLanguages,85265,2
When Zero Cost Abstractions Aren’t Zero Cost,72,p0un07,https://blog.polybdenum.com/2021/08/09/when-zero-cost-abstractions-aren-t-zero-cost.html,36,1628484936.0,Uncaffeinated,0.94,/r/ProgrammingLanguages/comments/p0un07/when_zero_cost_abstractions_arent_zero_cost/,ProgrammingLanguages,85265,2
CoqPL: Verifying a compiler through equational means,73,lxzgj9,https://www.youtube.com/watch?v=Qj8dGo010zI,2,1614903616.0,bjzaba,0.98,/r/ProgrammingLanguages/comments/lxzgj9/coqpl_verifying_a_compiler_through_equational/,ProgrammingLanguages,85265,2
Resources for the working programmer to learn more about the fundamentals and theory of programming languages.,75,giaeht,https://github.com/jeanqasaur/learn-programming-languages,1,1589287005.0,mttd,0.96,/r/ProgrammingLanguages/comments/giaeht/resources_for_the_working_programmer_to_learn/,ProgrammingLanguages,85265,2
"Do you know any books about low-level (C/C++, Rust level) programming language design?",75,xktl8i,https://www.reddit.com/r/ProgrammingLanguages/comments/xktl8i/do_you_know_any_books_about_lowlevel_cc_rust/,27,1663827990.0,pythoncircus,0.96,/r/ProgrammingLanguages/comments/xktl8i/do_you_know_any_books_about_lowlevel_cc_rust/,ProgrammingLanguages,85265,2
Principles of Programming Languages (POPL) 2021 Videos,72,kt1yea,https://app.clowdr.org/conference/popl2021,0,1610110691.0,mttd,0.97,/r/ProgrammingLanguages/comments/kt1yea/principles_of_programming_languages_popl_2021/,ProgrammingLanguages,85265,2
A Novel Approach to Generate Correctly Rounded Math Libraries for New Floating Point Representations,72,j3vdqb,https://arxiv.org/abs/2007.05344,8,1601648566.0,mttd,0.98,/r/ProgrammingLanguages/comments/j3vdqb/a_novel_approach_to_generate_correctly_rounded/,ProgrammingLanguages,85265,2
Program Logics for Certified Compilers (this textbook is now free),73,iocas5,https://www.cs.princeton.edu/~appel/papers/plcc.pdf,4,1599501099.0,stepstep,0.99,/r/ProgrammingLanguages/comments/iocas5/program_logics_for_certified_compilers_this/,ProgrammingLanguages,85265,2
A formally verified proof of the soundness of System F,72,avnjlk,https://www.reddit.com/r/ProgrammingLanguages/comments/avnjlk/a_formally_verified_proof_of_the_soundness_of/,7,1551333055.0,stepstep,0.97,/r/ProgrammingLanguages/comments/avnjlk/a_formally_verified_proof_of_the_soundness_of/,ProgrammingLanguages,85265,2
"I suggest every language designers to read about this, this article was suggested by @snidane, and I thought that it has really great insights on how to handle error in a programming language.",70,9h17di,http://joeduffyblog.com/2016/02/07/the-error-model/#ambitions-and-learnings,16,1537323461.0,hou32hou,0.94,/r/ProgrammingLanguages/comments/9h17di/i_suggest_every_language_designers_to_read_about/,ProgrammingLanguages,85265,2
The Generics Problem,74,zng0wo,https://man.sr.ht/~icefox/garnet/generics.md,35,1671201173.0,yorickpeterse,0.96,/r/ProgrammingLanguages/comments/zng0wo/the_generics_problem/,ProgrammingLanguages,85265,2
When should we *not* move a check to compile time?,74,xnv5es,https://www.reddit.com/r/ProgrammingLanguages/comments/xnv5es/when_should_we_not_move_a_check_to_compile_time/,41,1664130787.0,verdagon,0.96,/r/ProgrammingLanguages/comments/xnv5es/when_should_we_not_move_a_check_to_compile_time/,ProgrammingLanguages,85265,2
Terry Tao on Desirable Properties of Math Notation,74,u812me,https://mathoverflow.net/questions/366070/what-are-the-benefits-of-writing-vector-inner-products-as-langle-u-v-rangle/366118#366118,23,1650473861.0,oilshell,0.98,/r/ProgrammingLanguages/comments/u812me/terry_tao_on_desirable_properties_of_math_notation/,ProgrammingLanguages,85265,2
Swift Regrets (feedback on language design),71,prvzhk,https://belkadan.com/blog/tags/swift-regrets/,28,1632148013.0,oilshell,0.99,/r/ProgrammingLanguages/comments/prvzhk/swift_regrets_feedback_on_language_design/,ProgrammingLanguages,85265,2
POPL 2021 Videos on YouTube,72,n6kkw7,https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg/videos,0,1620342987.0,bjzaba,0.99,/r/ProgrammingLanguages/comments/n6kkw7/popl_2021_videos_on_youtube/,ProgrammingLanguages,85265,2
Rust's Most Unrecognized Contributor,73,n3jnih,https://brson.github.io/2021/05/02/rusts-most-unrecognized-contributor,5,1620001266.0,bjzaba,0.95,/r/ProgrammingLanguages/comments/n3jnih/rusts_most_unrecognized_contributor/,ProgrammingLanguages,85265,2
Facebook’s TransCoder AI converts code from one programming language into another,74,gz6i82,https://venturebeat.com/2020/06/08/facebooks-transcoder-ai-converts-code-from-one-programming-language-into-another/,12,1591645891.0,jsamwrites,0.92,/r/ProgrammingLanguages/comments/gz6i82/facebooks_transcoder_ai_converts_code_from_one/,ProgrammingLanguages,85265,2
"Books/Resources to learn more about category theory, programming theory, and the foundations of computing in general.",74,ggooe4,https://www.reddit.com/r/ProgrammingLanguages/comments/ggooe4/booksresources_to_learn_more_about_category/,19,1589061608.0,Aloys1us_Bl00m,0.96,/r/ProgrammingLanguages/comments/ggooe4/booksresources_to_learn_more_about_category/,ProgrammingLanguages,85265,2
Classes and Instances · Crafting Interpreters,68,ei7oqw,http://craftinginterpreters.com/classes-and-instances.html,11,1577821033.0,mttd,0.96,/r/ProgrammingLanguages/comments/ei7oqw/classes_and_instances_crafting_interpreters/,ProgrammingLanguages,85265,2
Type checking if expressions,68,10ctoel,http://journal.stuffwithstuff.com/2023/01/03/type-checking-if-expressions/,47,1673813776.0,munificent,0.95,/r/ProgrammingLanguages/comments/10ctoel/type_checking_if_expressions/,ProgrammingLanguages,85265,2
Efficient Compilation of Algebraic Effect Handlers - Ningning Xie,70,vq86w1,https://youtu.be/tWLPrPfb4_U?t=1566,21,1656818483.0,typesanitizer,0.94,/r/ProgrammingLanguages/comments/vq86w1/efficient_compilation_of_algebraic_effect/,ProgrammingLanguages,85265,2
On the merits of low hanging fruit.,72,nqm6rf,https://www.reddit.com/r/ProgrammingLanguages/comments/nqm6rf/on_the_merits_of_low_hanging_fruit/,49,1622641663.0,PL_Design,0.93,/r/ProgrammingLanguages/comments/nqm6rf/on_the_merits_of_low_hanging_fruit/,ProgrammingLanguages,85265,2
Idris 2: Quantitative Type Theory in Practice,71,mhuc6e,https://www.type-driven.org.uk/edwinb/idris-2-quantitative-type-theory-in-practice.html,0,1617280564.0,mttd,1.0,/r/ProgrammingLanguages/comments/mhuc6e/idris_2_quantitative_type_theory_in_practice/,ProgrammingLanguages,85265,2
Odin Programming Language: An Introduction - 2020-11-26,72,k9qb3l,https://www.youtube.com/watch?v=rCqFdYUnC24,53,1607513602.0,gingerbill,0.92,/r/ProgrammingLanguages/comments/k9qb3l/odin_programming_language_an_introduction_20201126/,ProgrammingLanguages,85265,2
"First alpha release of my programming language, Jasper",72,jpym7a,https://github.com/SebastianMestre/Jasper/releases,8,1604784102.0,yorickpeterse,0.99,/r/ProgrammingLanguages/comments/jpym7a/first_alpha_release_of_my_programming_language/,ProgrammingLanguages,85265,2
PL Notation is a Barrier to Entry,73,j20ku9,https://blog.sigplan.org/2020/09/29/pl-notation-is-a-barrier-to-entry/,56,1601390721.0,mttd,0.93,/r/ProgrammingLanguages/comments/j20ku9/pl_notation_is_a_barrier_to_entry/,ProgrammingLanguages,85265,2
Constraint Solvers for the Working PL Researcher,73,iqcioh,https://www.youtube.com/watch?v=rTOqg-f2rNM,2,1599772582.0,mttd,0.97,/r/ProgrammingLanguages/comments/iqcioh/constraint_solvers_for_the_working_pl_researcher/,ProgrammingLanguages,85265,2
Unix50 - Unix Today and Tomorrow: The Languages,69,dy3gj4,https://www.youtube.com/watch?v=xnCgoEyz31M,5,1574085231.0,mttd,0.96,/r/ProgrammingLanguages/comments/dy3gj4/unix50_unix_today_and_tomorrow_the_languages/,ProgrammingLanguages,85265,2
How Swift Achieved Dynamic Linking Where Rust Couldn't,72,dtqv11,https://gankra.github.io/blah/swift-abi/,32,1573271519.0,mttd,0.96,/r/ProgrammingLanguages/comments/dtqv11/how_swift_achieved_dynamic_linking_where_rust/,ProgrammingLanguages,85265,2
Why don't more languages implement LISP-style interactive REPLs?,66,10u74ts,https://www.reddit.com/r/ProgrammingLanguages/comments/10u74ts/why_dont_more_languages_implement_lispstyle/,92,1675583303.0,jmhimara,0.94,/r/ProgrammingLanguages/comments/10u74ts/why_dont_more_languages_implement_lispstyle/,ProgrammingLanguages,85265,2
Pictures of a Working Garbage Collector,71,109tcqy,https://www.oilshell.org/blog/2023/01/garbage-collector.html,5,1673507808.0,oilshell,0.94,/r/ProgrammingLanguages/comments/109tcqy/pictures_of_a_working_garbage_collector/,ProgrammingLanguages,85265,2
Programmable type systems?,69,vjmxuy,https://www.reddit.com/r/ProgrammingLanguages/comments/vjmxuy/programmable_type_systems/,48,1656072462.0,mattsowa,1.0,/r/ProgrammingLanguages/comments/vjmxuy/programmable_type_systems/,ProgrammingLanguages,85265,2
Abstraction: Not What You Think It Is,69,tqtxfx,https://www.pathsensitive.com/2022/03/abstraction-not-what-you-think-it-is.html,9,1648537187.0,bjzaba,0.97,/r/ProgrammingLanguages/comments/tqtxfx/abstraction_not_what_you_think_it_is/,ProgrammingLanguages,85265,2
"Parsing Layout, or: Haskell's Syntax is a Mess",67,pho0ab,https://abby.how/posts/parsing-layout.html,23,1630745509.0,bjzaba,0.93,/r/ProgrammingLanguages/comments/pho0ab/parsing_layout_or_haskells_syntax_is_a_mess/,ProgrammingLanguages,85265,2
"Any usability studies on ""name determines visibility""?",68,nn3c35,https://www.reddit.com/r/ProgrammingLanguages/comments/nn3c35/any_usability_studies_on_name_determines/,30,1622223948.0,Nuoji,0.99,/r/ProgrammingLanguages/comments/nn3c35/any_usability_studies_on_name_determines/,ProgrammingLanguages,85265,2
Rescript: Safer and faster alternative than Typescript,68,ilqmx7,https://rescript-lang.org/docs/manual/latest/introduction,54,1599127554.0,hou32hou,0.9,/r/ProgrammingLanguages/comments/ilqmx7/rescript_safer_and_faster_alternative_than/,ProgrammingLanguages,85265,2
I'm writing free a book on designing and implementing programming languages. The first few chapters are up now. I'd love to know what you think!,70,5o7y4z,http://www.craftinginterpreters.com/,31,1484530904.0,munificent,1.0,/r/ProgrammingLanguages/comments/5o7y4z/im_writing_free_a_book_on_designing_and/,ProgrammingLanguages,85265,2
"Via lambda-the-ultimate.org: Computer History Museum releases source code for PostScript, with Adobe's permission and support",66,zkjztp,https://computerhistory.org/blog/postscript-a-digital-printing-press/,1,1670899387.0,flexibeast,0.95,/r/ProgrammingLanguages/comments/zkjztp/via_lambdatheultimateorg_computer_history_museum/,ProgrammingLanguages,85265,2
Peridot MVP,69,wjsxwh,https://www.reddit.com/r/ProgrammingLanguages/comments/wjsxwh/peridot_mvp/,2,1660016228.0,e_hatti,0.93,/r/ProgrammingLanguages/comments/wjsxwh/peridot_mvp/,ProgrammingLanguages,85265,2
